<launch>
    <let name="urdf_path" 
         value="$(find-pkg-share description)/urdf/urdf_control_gz.xacro" />
    <let name="rviz_config_path"
         value="$(find-pkg-share description)/rviz/urdf_config.rviz" />
    <let name="gazebo_config_path" value="$(find-pkg-share bringup)/config/gazebo_bridge.yaml"/>

    <node pkg="robot_state_publisher" exec="robot_state_publisher" name="robot_state_publisher">
        <param name="robot_description"
               value="$(command 'xacro $(var urdf_path)')" />
    </node>

    <include file="$(find-pkg-share ros_gz_sim)/launch/gz_sim.launch.py">
        <arg name="gz_args" value="$(find-pkg-share bringup)/worlds/1.sdf -r"/>
    </include>

    <node pkg="ros_gz_sim" exec="create" args="-topic robot_description"/>
    <node pkg="ros_gz_bridge" exec="parameter_bridge">
        <param name="config_file" value="$(var gazebo_config_path)"/>
    </node>

    <!-- Delay ros2_control_node to allow robot_state_publisher to start first -->
    <!-- <node pkg="controller_manager" exec="ros2_control_node" name="controller_manager" launch-prefix="bash -c 'sleep 2; $0 $@'">
        <param from="$(find-pkg-share bringup)/config/controllers.yaml"/>
    </node> -->

    <node pkg="controller_manager" exec="spawner" args="joint_state_broadcaster"/>
    <node pkg="controller_manager" exec="spawner" args="diff_drive_controller"/>

    <node pkg="rviz2" exec="rviz2" output="screen" 
        args="-d $(var rviz_config_path)" />
</launch>